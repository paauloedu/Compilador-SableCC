/* This file was generated by SableCC (http://www.sablecc.org/). */

package cordel.node;

import cordel.analysis.*;

@SuppressWarnings("nls")
public final class AVetorTipo extends PTipo
{
    private TRuma _ruma_;
    private TDe _de_;
    private PTipoBase _tipoBase_;
    private TColEsq _colEsq_;
    private PExp _exp_;
    private TColDir _colDir_;

    public AVetorTipo()
    {
        // Constructor
    }

    public AVetorTipo(
        @SuppressWarnings("hiding") TRuma _ruma_,
        @SuppressWarnings("hiding") TDe _de_,
        @SuppressWarnings("hiding") PTipoBase _tipoBase_,
        @SuppressWarnings("hiding") TColEsq _colEsq_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TColDir _colDir_)
    {
        // Constructor
        setRuma(_ruma_);

        setDe(_de_);

        setTipoBase(_tipoBase_);

        setColEsq(_colEsq_);

        setExp(_exp_);

        setColDir(_colDir_);

    }

    @Override
    public Object clone()
    {
        return new AVetorTipo(
            cloneNode(this._ruma_),
            cloneNode(this._de_),
            cloneNode(this._tipoBase_),
            cloneNode(this._colEsq_),
            cloneNode(this._exp_),
            cloneNode(this._colDir_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVetorTipo(this);
    }

    public TRuma getRuma()
    {
        return this._ruma_;
    }

    public void setRuma(TRuma node)
    {
        if(this._ruma_ != null)
        {
            this._ruma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ruma_ = node;
    }

    public TDe getDe()
    {
        return this._de_;
    }

    public void setDe(TDe node)
    {
        if(this._de_ != null)
        {
            this._de_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._de_ = node;
    }

    public PTipoBase getTipoBase()
    {
        return this._tipoBase_;
    }

    public void setTipoBase(PTipoBase node)
    {
        if(this._tipoBase_ != null)
        {
            this._tipoBase_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipoBase_ = node;
    }

    public TColEsq getColEsq()
    {
        return this._colEsq_;
    }

    public void setColEsq(TColEsq node)
    {
        if(this._colEsq_ != null)
        {
            this._colEsq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colEsq_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TColDir getColDir()
    {
        return this._colDir_;
    }

    public void setColDir(TColDir node)
    {
        if(this._colDir_ != null)
        {
            this._colDir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colDir_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ruma_)
            + toString(this._de_)
            + toString(this._tipoBase_)
            + toString(this._colEsq_)
            + toString(this._exp_)
            + toString(this._colDir_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ruma_ == child)
        {
            this._ruma_ = null;
            return;
        }

        if(this._de_ == child)
        {
            this._de_ = null;
            return;
        }

        if(this._tipoBase_ == child)
        {
            this._tipoBase_ = null;
            return;
        }

        if(this._colEsq_ == child)
        {
            this._colEsq_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._colDir_ == child)
        {
            this._colDir_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ruma_ == oldChild)
        {
            setRuma((TRuma) newChild);
            return;
        }

        if(this._de_ == oldChild)
        {
            setDe((TDe) newChild);
            return;
        }

        if(this._tipoBase_ == oldChild)
        {
            setTipoBase((PTipoBase) newChild);
            return;
        }

        if(this._colEsq_ == oldChild)
        {
            setColEsq((TColEsq) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._colDir_ == oldChild)
        {
            setColDir((TColDir) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
