/* This file was generated by SableCC (http://www.sablecc.org/). */

package cordel.node;

import cordel.analysis.*;

@SuppressWarnings("nls")
public final class AMaiorIgualExp extends PExp
{
    private PExp _exp_;
    private TMaiorIg _maiorIg_;
    private POpcao _opcao_;

    public AMaiorIgualExp()
    {
        // Constructor
    }

    public AMaiorIgualExp(
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TMaiorIg _maiorIg_,
        @SuppressWarnings("hiding") POpcao _opcao_)
    {
        // Constructor
        setExp(_exp_);

        setMaiorIg(_maiorIg_);

        setOpcao(_opcao_);

    }

    @Override
    public Object clone()
    {
        return new AMaiorIgualExp(
            cloneNode(this._exp_),
            cloneNode(this._maiorIg_),
            cloneNode(this._opcao_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMaiorIgualExp(this);
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TMaiorIg getMaiorIg()
    {
        return this._maiorIg_;
    }

    public void setMaiorIg(TMaiorIg node)
    {
        if(this._maiorIg_ != null)
        {
            this._maiorIg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._maiorIg_ = node;
    }

    public POpcao getOpcao()
    {
        return this._opcao_;
    }

    public void setOpcao(POpcao node)
    {
        if(this._opcao_ != null)
        {
            this._opcao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opcao_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exp_)
            + toString(this._maiorIg_)
            + toString(this._opcao_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._maiorIg_ == child)
        {
            this._maiorIg_ = null;
            return;
        }

        if(this._opcao_ == child)
        {
            this._opcao_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._maiorIg_ == oldChild)
        {
            setMaiorIg((TMaiorIg) newChild);
            return;
        }

        if(this._opcao_ == oldChild)
        {
            setOpcao((POpcao) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
